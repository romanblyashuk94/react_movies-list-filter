{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","utils/filterMoviesByQuery.js","App.tsx","index.tsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","movies","map","imdbId","normalizeText","text","split","filter","Boolean","join","toLowerCase","App","query","useState","searchQuery","setSearchQuery","visibleMovies","moviesFromServer","normalizeTitle","normalizeDescription","normalizeSearchQuery","foundQuetyInTitle","includes","foundQuetyInDescription","htmlFor","type","id","placeholder","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"ytEAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,SAI/B,sBAAKC,UAAU,UAAf,UACGF,EACD,uBACA,mBAAGK,KAAMP,EAAT,4BChCGQ,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,c,OCX5B,SAASC,EAAcC,GACrB,OAAOA,EACJC,MAAM,KACNC,OAAOC,SACPC,KAAK,KACLC,cCCE,IAAMC,EAAU,WACrB,IDC0CC,ECD1C,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,GDDoCJ,ECCkBE,EAAlBG,EDA5BV,QAAO,YAA6B,IAA1BZ,EAAyB,EAAzBA,MAAOD,EAAkB,EAAlBA,YACvBwB,EAAiBd,EAAcT,GAC/BwB,EAAuBf,EAAcV,GACrC0B,EAAuBhB,EAAcQ,GAErCS,EAAoBH,EAAeI,SAASF,GAC5CG,EAA0BJ,EAC7BG,SAASF,GAEZ,OAAOC,GAAqBE,MCP9B,OACE,sBAAK3B,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAO4B,QAAQ,eAAe5B,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACE6B,KAAK,OACLC,GAAG,eACH9B,UAAU,QACV+B,YAAY,mBACZC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAWf,EAAee,EAAMC,OAAOH,iBAMzD,cAAC,EAAD,CAAY3B,OAAQe,OAGtB,qBAAKpB,UAAU,UAAf,mCCjCNoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d0e71ad2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","function normalizeText(text) {\n  return text\n    .split(' ')\n    .filter(Boolean)\n    .join(' ')\n    .toLowerCase();\n}\n\nexport function filterMoviesByQuery(movies, query) {\n  return movies.filter(({ title, description }) => {\n    const normalizeTitle = normalizeText(title);\n    const normalizeDescription = normalizeText(description);\n    const normalizeSearchQuery = normalizeText(query);\n\n    const foundQuetyInTitle = normalizeTitle.includes(normalizeSearchQuery);\n    const foundQuetyInDescription = normalizeDescription\n      .includes(normalizeSearchQuery);\n\n    return foundQuetyInTitle || foundQuetyInDescription;\n  });\n}\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { filterMoviesByQuery } from './utils/filterMoviesByQuery';\n\nexport const App: FC = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const visibleMovies = filterMoviesByQuery(moviesFromServer, searchQuery);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={searchQuery}\n                onChange={(event) => setSearchQuery(event.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}